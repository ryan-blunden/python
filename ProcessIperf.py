'''
iPerf processing Script. 
Author Siggi Bjarnason Copyright 2021
Website https://supergeek.us

Description:
Reads in json generated by iperf and converts to csv for analysis and charting

'''
# Import libraries
import sys
import os
import string
import time
import platform
import json
try:
  import tkinter as tk
  from tkinter import filedialog
  btKinterOK = True
except:
  print ("Failed to load tkinter, CLI only mode.")
  btKinterOK = False

# End imports

def getInput(strPrompt):
  if sys.version_info[0] > 2:
    return input(strPrompt)
  else:
    print("please upgrade to python 3")
    sys.exit(5)

def LogEntry(strMsg):
	strTimeStamp = time.strftime("%m-%d-%Y %H:%M:%S")
	objLogOut.write("{0} : {1}\n".format(strTimeStamp, strMsg))
	print(strMsg)


def main():
  global objLogOut

  ISO = time.strftime("-%Y-%m-%d-%H-%M-%S")

  strBaseDir = os.path.dirname(sys.argv[0])
  strBaseDir = strBaseDir.replace("\\", "/")
  strRealPath = os.path.realpath(sys.argv[0])
  strRealPath = strRealPath.replace("\\", "/")
  if strBaseDir == "":
    iLoc = strRealPath.rfind("/")
    strBaseDir = strRealPath[:iLoc]
  if strBaseDir[-1:] != "/":
    strBaseDir += "/"
  strLogDir = strBaseDir + "Logs/"
  if strLogDir[-1:] != "/":
    strLogDir += "/"

  iLoc = sys.argv[0].rfind(".")

  if not os.path.exists(strLogDir):
    os.makedirs(strLogDir)
    print(
        "\nPath '{0}' for log files didn't exists, so I create it!\n".format(strLogDir))

  strScriptName = os.path.basename(sys.argv[0])
  iLoc = strScriptName.rfind(".")
  strLogFile = strLogDir + strScriptName[:iLoc] + ISO + ".log"
  objLogOut = open(strLogFile, "w", 1)

  strVersion = "{0}.{1}.{2}".format(
      sys.version_info[0], sys.version_info[1], sys.version_info[2])

  print("This is a script process json file from iperf and generate a csv file "
          " that is easier to analyze and chart. "
          "This is running under Python Version {}".format(strVersion))
  print("Running from: {}".format(strRealPath))
  dtNow = time.asctime()
  print("The time now is {}".format(dtNow))
  print("Logs saved to {}".format(strLogFile))

  strFilein = ""
  sa = sys.argv
  lsa = len(sys.argv)
  if lsa > 1:
    strFilein = sa[1]

  if strFilein == "":
    if btKinterOK:
      print("File name to be processed is missing. Opening up a file open dialog box, "
              " please select the file you wish to process.")
      root = tk.Tk()
      root.withdraw()
      strFilein = filedialog.askopenfilename(title="Select the iperf json file", filetypes=(
          ("json files", "*.json"), ("all files", "*.*")))
    else:
      strFilein = getInput(
          "Please provide full path and filename for the WP Export file to be processed: ")

  if strFilein == "":
    print("No filename provided unable to continue")
    sys.exit(9)

  if os.path.isfile(strFilein):
    print("OK found {}".format(strFilein))
  else:
    print("Can't find WP export file {}".format(strFilein))
    sys.exit(4)

  iLoc = strFilein.rfind(".")
  strFileExt = strFilein[iLoc+1:]
  iLoc = strFilein.find(".")
  strOutFile = strFilein[:iLoc] + ".csv"

  LogEntry ("CSV results will be written to {}".format(strOutFile))

  if strFileExt.lower() == "json":
    objFileIn = open(strFilein, "r", encoding='utf-8')
  else:
    LogEntry(
        "only able to process json files. Unable to process {} files".format(strFileExt))
    sys.exit(5)

  strJson = objFileIn.read()

  try:
      dictInput = json.loads(strJson)
  except Exception as err:
      LogEntry("json Error: {}\n".format(err))
      sys.exit(9)

  LogEntry ("top level is {} with {} entries.".format(type(dictInput),len(dictInput)))

if __name__ == '__main__':
  main()
